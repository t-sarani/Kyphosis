install.packages("caret")
# نصب و بارگذاری کتابخانههای مورد نیاز
library(rpart)
library(randomForest)
library(fpc)
library(cluster)
library(ggplot2)
library(caret)
library(MASS)
library(fmsb)
data=kyphosis
# پیشپردازش دادهها
data <- na.omit(kyphosis) # حذف مقادیر گمشده
data <- unique(data) # حذف دادههای تکراری
data$Kyphosis <- NULL # حذف ستون Kyphosis برای خوشهبندی

# استانداردسازی دادهها
data_scaled <- scale(data) # استانداردسازی دادهها برای خوشهبندی

# تجزیه و تحلیل اکتشافی دادهها (EDA)
ggplot(data, aes(x=Age, y=Number)) + geom_point() + theme_minimal()

# خوشهبندی K-means
set.seed(123)
km <- kmeans(data_scaled, 3)
print(km)
table(kyphosis$Kyphosis, km$cluster)

# نمایش نتایج خوشهبندی
plot(data[c("Age", "Number")], col=km$cluster)
points(km$centers[, c("Age", "Number")], col=1:3, pch=8, cex=2)

# خوشهبندی PAM
pr <- pamk(data)
plot(pr$pamobject)

# تحلیل باقیماندهها برای مدل رگرسیون
model_lm <- lm(Age ~ Number + Start, data=data)
residuals_lm <- resid(model_lm)
par(mfrow=c(1,3))
hist(residuals_lm)
boxplot(residuals_lm)
qqnorm(residuals_lm)
qqline(residuals_lm, lwd=2, col="red")

# جنگل تصادفی
set.seed(435)
var <- sample(2, nrow(kyphosis), replace=TRUE, prob=c(0.7, 0.3))
trd <- kyphosis[var==1, ]
tsd <- kyphosis[var==2, ]
rf_model <- randomForest(Kyphosis ~ ., data=trd, ntree=100, proximity=TRUE)
print(rf_model)
table(predict(rf_model), trd$Kyphosis)

# درخت تصمیم
frm <- Kyphosis ~ Age + Number + Start
ct_model <- ctree(frm, data=trd)
print(ct_model)
plot(ct_model, type="simple")
tsp <- predict(ct_model, newdata=tsd)
table(tsp, tsd$Kyphosis)
